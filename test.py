@dp.message(F.text == "üìä –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –æ—Ü–µ–Ω–∫–∏ —É—á–µ–Ω–∏–∫–æ–≤")
async def show_student_grades(message: types.Message):
    if not is_teacher(message.from_user.id):
        await message.reply("–≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è —É—á–∏—Ç–µ–ª–µ–π.")
        return
    
    classes = get_teacher_classes(message.from_user.id)
    if not classes:
        await message.reply("–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –∫–ª–∞—Å—Å–æ–≤.")
        return
    
    response = "üìä –û—Ü–µ–Ω–∫–∏ —É—á–µ–Ω–∏–∫–æ–≤ –ø–æ –∫–ª–∞—Å—Å–∞–º:\n\n"
    
    for class_id, class_name in classes:
        grades = get_student_grades(class_id)
        if grades:
            response += f"–ö–ª–∞—Å—Å: {class_name}\n"
            for student_name, assignment_text, evaluation in grades:
                response += f"üë§ –°—Ç—É–¥–µ–Ω—Ç: {student_name}\n"
                response += f"üìù –ó–∞–¥–∞–Ω–∏–µ: {assignment_text}\n"
                response += f"üìà –û—Ü–µ–Ω–∫–∞: {evaluation}/10\n\n"
        else:
            response += f"–ö–ª–∞—Å—Å: {class_name}\n–ù–µ—Ç –æ—Ü–µ–Ω–æ–∫ –¥–ª—è —ç—Ç–æ–≥–æ –∫–ª–∞—Å—Å–∞.\n\n"
    
    await message.reply(response or "–ù–µ—Ç –æ—Ü–µ–Ω–æ–∫ –¥–ª—è –≤—Å–µ—Ö –∫–ª–∞—Å—Å–æ–≤.", parse_mode=ParseMode.MARKDOWN)
